#! /usr/bin/ruby -w



# Point

Point = Struct.new(:row, :col)



# Elements

TERRAINS = [:mountain,
            :forest,
            :desert,
            :swamp,
            :water,
           ]

ANIMALS = [:bears, :cougars]

BLUE_STRUCTURES  = [:blue_shack,  :blue_stone]
GREEN_STRUCTURES = [:green_shack, :green_stone]
WHITE_STRUCTURES = [:white_shack, :white_stone]
BLACK_STRUCTURES = [:black_shack, :black_stone]
STRUCTURES = BLUE_STRUCTURES  +
             GREEN_STRUCTURES +
             WHITE_STRUCTURES +
             BLACK_STRUCTURES

ELEMENTS = TERRAINS + ANIMALS + STRUCTURES



# Hexagon

class Hexagon
  def initialize()
    @distances = Hash(ELEMENTS.map{ |e| [e,nil] })
  end
end



# Board

class Board
  @@width  = 12
  @@height = 8

  def initialize()
    @data = Array.new(@@width * @@height, Hexagon.new())
  end

  def self.is_in?(pos)
    return pos.col >= 0 && pos.col < @@width &&
           pos.row >= 0 && pos.row < @@height
  end

  def self.neighbours(pos)
    r, c = pos.row, pos.col
    return [
      Point.new(r-1,c  ),
      Point.new(r+1,c  ),
      Point.new(r,  c-1),
      Point.new(r,  c+1),
      Point.new(r-1,c+1),
      Point.new(r+1,c-1),
    ].select { |p| self.is_in?(p) }
  end

  def [](pos)
    return self.data[pos.rol * @width + pos.col]
  end
end



# Test

p = Point.new(1,1)
puts Board.neighbours(p)
